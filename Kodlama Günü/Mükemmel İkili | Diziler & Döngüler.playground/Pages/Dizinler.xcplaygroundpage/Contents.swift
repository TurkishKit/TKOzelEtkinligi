//: ## Dizinler
//: Ä°ÅŸte cihazlardan oluÅŸan bir dizi:
let devices = ["iPhone", "iPad", "iPod", "iMac"]
/*:
 Sonucu, satÄ±r iÃ§inde gÃ¶rmek iÃ§in Sonucu GÃ¶ster butonunu kullanÄ±n. Dizideki her Ã¶ge, sÄ±fÄ±rdan baÅŸlayan bir sayÄ±ya sahiptir.
 
 Bu sayÄ±, Ã¶genin _**dizini** (**index**)_ olarak bilinir ve Ã¶genin dizideki sÄ±rasÄ±nÄ± temsil eder. Bu Ã¶rnekte "iPod" Ã¶ÄŸesi, `cihazlar` dizisinin ikinci dizinindedir. Bu dizi `let` ile tanÄ±mlandÄ±ÄŸÄ± iÃ§in, hem Ã¶geler hem de Ã¶gelerin sÄ±rasÄ± hiÃ§bir zaman deÄŸiÅŸmeyecektir. Bu, diziyi kaÃ§ defa yazdÄ±rÄ±rsanÄ±z yazdÄ±rÄ±n, "iPod" Ã¶gesinin her zaman ikinci sÄ±rada olacaÄŸÄ± anlamÄ±na gelir.
 
 - callout(Not): Dizin kelimesinin Ã§oÄŸul halini bazen "dizinler", bazen de "indeksler" olarak gÃ¶rebilirsiniz.
 
 Dizideki her Ã¶genin, ilk Ã¶ge ile sÄ±fÄ±rdan baÅŸlayan, bir dizini vardÄ±r. Belirli bir dizinde depolanan bir deÄŸeri, dizi isminden sonra kÃ¶ÅŸeli parantezlerin iÃ§ine dizin deÄŸerini yerleÅŸtirerek bulabilirsiniz:
*/
// Bu, sÄ±fÄ±rÄ±ncÄ± dizindeki nesneyi alÄ±r
devices[0]

/*: 
 - callout(Deney): `enSevdigimCihaz` adÄ±nda bir sabit tanÄ±mlayÄ±n ve deÄŸerini, `cihazlar` dizisi Ã¼zerinde bir dizin kullanarak "iPod" deÄŸerine eÅŸitleyin.
 */
// enSevdigimCihaz sabitini aÅŸaÄŸÄ±da tanÄ±mlayÄ±n

/*:
 
 Dizini kullanarak bir deÄŸere eriÅŸmek, Ã§ok dikkatlice yapÄ±lmalÄ±dÄ±r. EÄŸer listede olmayan bir Ã¶geye eriÅŸmeye Ã§alÄ±ÅŸÄ±rsanÄ±z, oldukÃ§a ciddi bir program hatasÄ±na sebep olabilirsiniz. Bu, uzunluÄŸu 50 metre olan bir iskelede, birisine 100 metre ilerlemesi gerektiÄŸini sÃ¶ylemek gibidir. EÄŸer o kiÅŸi yÃ¶nergelerinizi bir programÄ±n kodunuzu Ã§alÄ±ÅŸtÄ±rdÄ±ÄŸÄ± kadar katÄ± bir biÃ§imde takip etseydi, kendini birden suda bulurdu. ğŸ˜€
 
 - callout(Deney): Listede `4`. sÄ±radaki Ã¶geye eriÅŸmeye Ã§alÄ±ÅŸÄ±n. Hata ile ilgili daha fazla bilgi iÃ§in aÅŸaÄŸÄ±daki konsol alanÄ±nÄ± aÃ§Ä±n.
 */



//: SonrasÄ±nda, bir dizide kaÃ§ Ã¶ÄŸe bulunduÄŸunu nasÄ±l bulabileceÄŸimizi Ã¶ÄŸrenelim!
//: 
//: [Geri](@previous)  |  Sayfa 3  |  [Ä°leri: Ã–gelerin SayÄ±sÄ±](@next)
