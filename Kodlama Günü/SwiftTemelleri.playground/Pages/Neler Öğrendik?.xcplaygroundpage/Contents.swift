//: ## Neler Ã–ÄŸrendik?
//: Bu oturumda Ã¶ÄŸrendiklerimiz;
//: - `let` ile tanÄ±mlanan deÄŸerler sabittir ve bir deÄŸer atandÄ±ÄŸÄ±nda deÄŸiÅŸtirilemezler.
//: - `var` ile tanÄ±mlanan deÄŸerler deÄŸiÅŸkendir, ve zaman iÃ§erisinde yeni deÄŸerler atanabilir.
//: - DeÄŸiÅŸken bir deÄŸer kendine olan bir atama ifadesinde kullanÄ±labilir: `puan = puan + 10`.
//: - BirleÅŸik atama operatÃ¶rleri deÄŸiÅŸkenlerin gÃ¼ncellenmesini saÄŸlar: `puan += 10`.
//: - Sabitleri ve deÄŸiÅŸkenleri doÄŸru yerlerde kullanmak, kodunuzu daha gÃ¼venilir kÄ±lar ve daha kolay anlaÅŸÄ±labilmesini saÄŸlar.
//: - Kararlar almak ve bu kararlar Ã¼zerinden hangi kodu Ã§alÄ±ÅŸtÄ±racaÄŸÄ±nÄ±zÄ± seÃ§mek, kodunuza yeni gÃ¼Ã§ler kazandÄ±rÄ±r. ğŸ˜‰
//: - DeÄŸeri `true` (doÄŸru) veya `false` (yanlÄ±ÅŸ) olabilen karÅŸÄ±larÅŸtÄ±rma operatÃ¶rleri ile kararlar alÄ±nabilir.
//: - `if` ve `else` sayesinde, karÅŸÄ±laÅŸtÄ±rma ifadeleri ile kod parÃ§alarÄ± Ã§alÄ±ÅŸtÄ±rÄ±labilir.
//:
//: \
//: SÄ±rada egzersizler var! Hemen bu oturumda Ã¶ÄŸrendiklerinizi kullanmaya baÅŸlayabilirsiniz.\
//:
//:[Geri](@previous)  |  Sayfa 17 / 20  |  [Ä°leri: AlÄ±ÅŸveriÅŸ Listesi](@next)
